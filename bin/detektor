#!/usr/bin/env ruby

require "bundler/setup"
require "plagiat_detektor"
require "thread/pool"

options =  PlagiatDetektor::OptionParser.parse(ARGV)

threads = []
threads << Thread.new { PlagiatDetektor::SearchFile.new(options.source).search }
threads << Thread.new { PlagiatDetektor::SearchFile.new(options.destination).search }

dir1files, dir2files = threads.map(&:join).map(&:value)

combineAll = PlagiatDetektor::SearchFile::product(dir1files, dir2files)

pool = Thread.pool(options.numprocs)

combineAll.each do |files|
  pool.process do
    f1 = PlagiatDetektor::clean_file(files[0])
    f2 = PlagiatDetektor::clean_file(files[1])
    # puts f1.inspect, f2.inspect
    diff = PlagiatDetektor::Diff::SequenceMatcher.new(f1, f2)
    puts "#{files[0]} and #{files[1]}: #{diff.ratio}" if diff.ratio >= options.threshold
  end
end

pool.shutdown
